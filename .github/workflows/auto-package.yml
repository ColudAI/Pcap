name: Build Executable and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from commit
        id: get_version
        run: |
          echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: Create necessary directories
        run: |
          mkdir -p cache logs

      - name: Clean build directory
        run: |
          rm -rf build/
          rm -rf *.exe
          rm -rf *.app
          rm -rf *.so
          rm -rf *.dylib

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          mode: app
          include-data-files: |
            ./files/template/load.html=files/template/load.html
          include-data-dir: |
            ./cache=cache
            ./logs=logs
          include-package: |
            Functions
            config
          enable-plugins: multiprocessing,tk-inter
          output-dir: dist
          disable-console: true
          windows-icon-from-ico: files/icon.ico
          macos-app-icon: files/icon.icns
          macos-app-name: Pcap

      - name: Test the executable
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            ./dist/main.exe --version
          elif [ "${{ runner.os }}" = "macOS" ]; then
            ./dist/Pcap.app/Contents/MacOS/main --version
          else
            ./dist/main.bin --version
          fi

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: |
            Automated release for ${{ steps.get_version.outputs.version }}
            
            Changes:
            - Built for ${{ matrix.os }}
            - Optimized with Nuitka
            - Includes all necessary dependencies
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            dist/
          include-hidden-files: true
